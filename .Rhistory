dataPath <- '/media/zhang/01CE0A9C75603BA0/Datasets/fb-recruit/'
train_item_file <- paste0(dataPath,'bids.csv')
train_user_file <- paste0(dataPath,'train.csv')
test_user_file <- paste0(dataPath,'test.csv')
train_item <- read.table(train_item_file,header=TRUE,sep=',',stringsAsFactors=FALSE)
train_user <- read.table(train_user_file,header=TRUE,sep=',',stringsAsFactors=FALSE)
part_user <- train_user[1:100,]
raw_table <- merge(x=train_user, y=train_item, by='bidder_id', all.x=TRUE)
timestmp <- raw_table$time
summary(timestmp)
mmin <- min(timestmp,na.rm=TRUE)
mmin
mmax <- max(timestmp,na.rm=TRUE)
mmax
timestmp <- (timestmp-mmin)/mmax
summary(timestmp)
timestmp <- (raw_table$time-mmin)/(mmax-mmin)
summary(timestmp)
hist(timestmp)
morning <- timestmp<=0.33
noon <- timestmp > 0.33 && timestmp<=0.66
noon <- (timestmp > 0.33) && (timestmp<=0.66)
noon <- (timestmp > 0.33) & (timestmp<=0.66)
eve <- timestmp>0.66
qtime <- zeros(dim(timestmp))
rm morning
rm(morning)
qtime <- rep(0,length(eve))
summary(qtime)
qtime[noon] <- 1
qtime[eve] <- 2
head(qtime,5)
summary(qtime)
hist(qtime)
mosaicplot(qtime~raw_table$outcome,
main='outcome by time', shade=FALSE,
color=TRUE, xlab='time',ylab='outcome')
hist(timestmp)
hist(timestmp, breaks=10)
hist(timestmp, breaks=20)
hist(timestmp, breaks=50)
hist(timestmp, breaks=100)
head(timestmp)
qtime <- round(timestmp*100)
head(qtime)
mosaicplot(raw_table$time~raw_table$outcome,
main='outcome by time', shade=FALSE,
color=TRUE, xlab='time',ylab='outcome')
??matrix
m = matrix([0,0.5,0.5,0,0,1,0,0,1],nrow=3,ncol=3,byrow=TRUE)
m = matrix(c(0,0.5,0.5,0,0,1,0,0,1),nrow=3,ncol=3,byrow=TRUE)
m
n = matrix(rep(1/3,9),nrow=3,ncol=3)
n
0.8*m+0.2*n
(1-0.06666667)/0.46666667
(1-0.8666667)/0.06666667
0.7*m+0.3*n
n = matrix(rep(1,9),nrow=3,ncol=3)
0.7*m+0.3*n
3*0.7/0.65/1.65
3-1.956
3-1.958
0.575+0.05
m
0.7*m
??dist
x <- matrix(zero(16),nrow=8)
x <- matrix(zeros(16),nrow=8)
x <- matrix(rep(0,16),nrow=8)
x
x[1,] <- c(2,10)
View(x)
x[2,] <- c(2,5)
x[3,] <- c(8,4)
x[4,] <- c(5,8)
x[5,] <- c(7,5)
x[6,] <- c(6,4)
x[7,] <- c(1,2)
x[8,] <- c(4,9)
x
dist(x,method='euclidean')
d <- dist(x,method='euclidean')
min(d)
??min
hc <- hclust(d)
??hclust
hc <- hclust(d, method='single')
plot(hc)
tree <- cuttree(hc,h=4)
tree <- cutree(hc,h=4)
plot(tree)
??dist
cd <- matrix(c(0,1,4,5,1,0,2,6,4,2,0,3,5,6,3,0),nrow=4,byrow=TRUE)
cd
dd <- as.dist(cd,diag=TRUE,upper=TRUE)
dd
dd <- as.dist(cd)
dd
dd <- as.dist(cd,diag=TRUE)
dd
ctree <-hclust(dd,method='single')
plot(ctree)
ctree <- hclust(dd,method='complete')
plot(ctree)
eucid <- function(x,y){
return (x[1]-y[1])^2+(x[2]-y[2])^2
}
eucid(c(1,0),c(0,1))
eucid <- function(x,y){
return ((x[1]-y[1])^2+(x[2]-y[2])^2)
}
eucid(c(1,0),c(0,1))
eucid(c(1,1),c(0,0))
eucid(c(2,2),c(1,1))
eucid(c(2,10),c(2,5))
a1 <- c(2,10)
a2 <- c(2,5)
a3 <- c(8,4)
a4 <- c(5,8)
c1 <- c(3.173,9.063)
c2 <- c(4.368,5.588)
eucid(c2,a1)
eucid(c2,a1)/(eucid(c1,a1)+eucid(c2,a1))
f <- function(x,c1,c2){
return (eucid(c2,x)/(eucid(c1,x)+eucid(c2,x)))
}
f(a1,c1,c2)
f(a2,c1,c2)
f(a3,c1,c2)
1-0.243
f(a4,c1,c2)
1-0.582
??norm
norm(c(2,2),2)
cd
norm(cd,2)
norm(cd,"2")
(1:10)^2
n <- c(0.918,0.25,0.243,0.582)
n^2
sum(n^2)
n^2*c(2,2,8,5)
sum(n^2*c(2,2,8,5))/1.303
sum(n^2*c(10,5,4,8))/1.303
n <- c(0.082,0.750,0.757,0.418)
sum(n^2)
sum(n^2*c(2,2,8,5))/1.317
sum(n^2*c(2,2,8,5))/sum(n^2)
sum(n^2*c(10,5,4,8))/sum(n^2)
setwd('/media/zhang/01CE0A9C75603BA0/pg-course/kdd/tau-mu/')
train <- read.csv('data/training.csv')
}
source('/media/zhang/01CE0A9C75603BA0/pg-course/kdd/tau-mu/src/R/utils.R')
?std
??std
??mean
source('/media/zhang/01CE0A9C75603BA0/pg-course/kdd/tau-mu/src/R/utils.R')
y <- train$signal
boxplot(tables(y))
boxplot(table(y))
table(train$signal)
boxplot(table(train$signal))
barplot(table(train$signal),names.arg = c("0", "1"),
main="Signal", col="black")
barplot(table(train$signal),names.arg = c("0", "1"),
main="Signal")
??apply
str(train)
colnames(train)
train <- train[,1:46]
summary(train)
apply(train, 2, featNorm)
summary(train)
train <- read.csv('data/training.csv')
sum(y)
train <- train[,2:46]
summary(train)
ntrain <- apply(train, 2, featNorm)
summary(ntrain)
str(ntrain)
head(ntrain)
dim(ntrain)
apply(ntrain, 2, hist)
??hist
colnames(ntrain)
hist(ntrain$LifeTime, breaks=20, freq=FALSE)
hist(ntrain[,'LifeTime'], breaks=20, freq=FALSE)
colnames(ntrain[,1])
colnames(ntrain[,1:2])
colnames(ntrain[,2])
??colnames
??colnames
??rownames
col.names(ntrain[,1])
row.names(ntrain[,1])
dim(ntrain)
?hist
nFeature <- dim(trainMat)[2]
nFeature <- dim(train)[2]
featName  <- colnames(trainMat)
featName  <- colnames(train)
paste0(path,'/',featName[1],'.png')
path <- './image'
paste0(path,'/',featName[1],'.png')
source('utils.R')
source('/media/zhang/01CE0A9C75603BA0/pg-course/kdd/tau-mu/utils.R')
source('./src/R/utils.R')
source('./src/R/utils.R')
saveHist(ntrain,'./image')
saveHist(ntrain,'./images')
source('./src/R/utils.R')
saveHist(ntrain,'./images')
??write.csv
write.csv(ntrain, file='./data/ntrain.csv',quote=FALSE,row.names=FALSE,col.names=TRUE,fileEncoding='utf-8')
ntrain <- read.csv('./data/ntrain.csv')
summary(ntrain)
test <- read.csv('./data/test.csv')
colnames(test)
ntest <- test[,2:46]
rm(test)
source('./src/R/utils.R')
ntest <- apply(ntest, 2, featNorm)
write.csv(ntest,file='./data/ntest.csv',quote=FALSE,row.names=FALSE,fileEncoding='utf-8')
